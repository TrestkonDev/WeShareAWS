version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      # - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      # - REPOSITORY_URI=- REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/hello-server
      - REPOSITORY_URI=746669204736.dkr.ecr.eu-west-1.amazonaws.com/hello-server #This is probably bad practice because the account number is visible in plain text here but it is the uri link on ECR
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
  build:
    commands:
      - echo Build started on `date`
      - echo Building Java application...
      - mvn clean package -Dmaven.test.skip=true
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      # - echo "Listing contents of the built image..."
      # - docker run --rm $REPOSITORY_URI:latest ls -la /app
      # - echo "Checking Java version in container..."
      # - docker run --rm $REPOSITORY_URI:latest java -version
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"hello-server","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
    files: imagedefinitions.json
